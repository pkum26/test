name: Dart and Flutter

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.1.5'  # Specify the exact Dart version

      # Install Flutter (OS-based installation method)
      - name: Install Flutter
        run: |
          if [[ "$OSTYPE" == "darwin"* ]]; then
            if ! command -v brew &>/dev/null; then
              /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            fi
            brew install --cask flutter

          elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
            sudo apt update
            sudo apt install snapd
            sudo snap install flutter --classic

          elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
            if ! command -v choco &>/dev/null; then
              powershell -Command "Set-ExecutionPolicy Bypass -Scope Process -Force; \
                [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
                iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))"
            fi
            choco install flutter
          fi

      # Validate Flutter installation
      - name: Flutter Doctor
        run: flutter doctor

      # Configure FVM
      - name: Configure FVM
        uses: kuhnroyal/flutter-fvm-config-action@v2
        id: fvm-config-action

      # Set up and validate Flutter (separate step from FVM configuration)
      - name: Setup, Configure, and Validate Flutter
        run: |
          # Set Flutter version and channel
          flutter channel 3.24.3
          flutter version stable

          # Install Flutter dependencies
          flutter pub get

          # Analyze code
          flutter analyze

          # Format code and run tests
          dart format --set-exit-if-changed test lib integration_test
          flutter test

      # Dart specific setup (optional for Dart projects)
      - name: Install Dart Dependencies
        run: dart pub get

      # Analyze Dart project source
      - name: Analyze Dart Project Source
        run: dart analyze

      # Run Dart tests (if it's a Dart project)
      - name: Run Dart Tests
        run: dart test
